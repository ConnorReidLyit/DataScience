install.packages("swirl")
library(swirl)
install_course_zip("c:/swirl_courses-master.zip", mutli = TRUE, which_course = "R Programming")
swirl()
install_course_zip("c:\swirl_courses-master.zip", mutli = TRUE, which_course = "R Programming")
install.packages("swirl")
library(swirl)
install_course_zip("c:/swirl_courses-master.zip", mutli = TRUE, which_course = "R Programming")
library(swirl)
swirl()
install.packages("swirl")
library(swirl)
install_course_zip("c:/swirl_courses-master.zip", mutli = TRUE, which_course = "R Programming")
?install_course_zip
install_course_zip("c:/swirl_courses-master.zip", which_course = "R Programming")
?install_course_zip
install_course_zip("c:/swirl_courses-master.zip", multi = TRUE, which_course = "R Programming")
install.packages("swirl")
library(swirl)
install_course_zip("c:/swirl_courses-master.zip", multi = TRUE, which_course = "R Programming")
swirl()
 5 + 7
x <- 5 + 7 
x
y <- x - 3
y
z <- c(1.1, 9, 3.14> z <- c(1.1, 9, 3.14))
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
sqrt(z - 1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
y <- c(x, 0, x)
exit()
0
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
y <- c(x, 0, x)
z <- 2*x + y + 1
z
z <- c(1:3, NA); result <- is.na(z)
result
vec1 <- C("Hockey", "Football", "Baseball", "Curling", "Rugby", "Hurling", "Basketball", "Tennis", "Cricket", "Lacrosse")
vec1 <- c("Hockey", "Football", "Baseball", "Curling", "Rugby", "Hurling", "Basketball", "Tennis", "Cricket", "Lacrosse")
vec1 <- c("Hockey", "Football", "Baseball", "Curling", "Rugby", "Hurling", "Basketball", "Tennis", "Cricket", "Lacrosse")
vec2 <- c("Hockey", "Lacrosse", "Hockey", "WaterPolo", "Hockey", "Lacross")
vec2 <- vec1 + vec2
vec2 <- c("Hockey", "Lacrosse", "Hockey", "WaterPolo", "Hockey", "Lacross" + vec1)
vec2 <- vec1[1] + vec2[1]
a <- abc
b <- def
a + b
a <- abc
a <- "abc"
b <- "def"
a + b
vec1 <- c("Hockey", "Football", "Baseball", "Curling", "Rugby", "Hurling", "Basketball", "Tennis", "Cricket", "Lacrosse")
as.numeric(vec1)
vec1 <- c("Hockey", "Football", "Baseball", "Curling", "Rugby", "Hurling", "Basketball", "Tennis", "Cricket", "Lacrosse")
vec1 <- c("Hockey", "Football", "Baseball", "Curling", "Rugby", "Hurling", "Basketball", "Tennis", "Cricket", "Lacrosse")
vec2 <- c(vec1, "Hockey", "Lacrosse", "Hockey", "WaterPolo", "Hockey", "Lacross")
vec2_factor <- as.factor(vec2)
vec2
vec1 <- c("Hockey", "Football", "Baseball", "Curling", "Rugby", "Hurling", "Basketball", "Tennis", "Cricket", "Lacrosse")
vec2 <- c(vec1, "Hockey", "Lacrosse", "Hockey", "WaterPolo", "Hockey", "Lacross")
vec2_factor <- as.factor(vec2)
vec2
vec1 <- c("Hockey", "Football", "Baseball", "Curling", "Rugby", "Hurling", "Basketball", "Tennis", "Cricket", "Lacrosse")
vec2 <- c(vec1, "Hockey", "Lacrosse", "Hockey", "WaterPolo", "Hockey", "Lacrosse")
vec2_factor <- as.factor(vec2)
vec2
vec1 <- c("Hockey", "Football", "Baseball", "Curling", "Rugby", "Hurling", "Basketball", "Tennis", "Cricket", "Lacrosse")
vec2 <- c(vec1, "Hockey", "Lacrosse", "Hockey", "WaterPolo", "Hockey", "Lacrosse")
vec2_factor <- as.factor(vec2)
vec2
vec2_factor
swirl()
swirl()
library(swirl)
install_course_zip("c:/swirl_courses-master.zip", multi = TRUE, which_course = "R Programming")
swirl()
install.packages("swirl")
library(swirl)
install.packages("swirl")
library(swirl)
install_course_zip("c:/swirl_courses-master.zip", multi = TRUE, which_course = "R Programming")
install.packages("swirl")
library(swirl)
install.packages("swirl")
library(swirl)
source("C:/Users/Connor/Source/Repos/DataScience/Swirl/script.R", encoding = "Windows-1252")
install.packages("swirl") library(swirl) install_course_zip("c:/swirl_courses-master.zip", multi = TRUE, which_course = "R Programming") swirl()
num_vect <- c(.5,55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
exit()
exit
0
x <- c(34, 56, 55, 87, NA, 4, NA, NA, 1, 85)
quit
quit()
x <- c(34, 56, 55, 87, NA, 4, NA, NA, 1, 85)
count(is.na(x))
exit
quit
0
close
reset
x <- c(34, 56, 55, 87, NA, 4, NA, NA, 1, 85)
count(is.na(x))
length(is.na(x))
sum(is.na(x))
?count
is.na(x)
